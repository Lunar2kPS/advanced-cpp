function(setup_platforms)
    if (WIN32)
        set(WINDOWS True PARENT_SCOPE)
        set(PLATFORM_NAME "Windows" PARENT_SCOPE)
    elseif (APPLE)
        set(MACOS True PARENT_SCOPE)
        set(PLATFORM_NAME "MacOS" PARENT_SCOPE)
    elseif (UNIX)   # AND NOT APPLE
        set(LINUX True PARENT_SCOPE)
        
        execute_process(COMMAND "./cmake-scripts/pi-check.sh" RESULT_VARIABLE EXIT_CODE)
        if (EXIT_CODE EQUAL 0)
            set(PLATFORM_NAME "Linux" PARENT_SCOPE)
        else()
            set(PLATFORM_NAME "Raspberry Pi" PARENT_SCOPE)
            set(RASPBERRY_PI True PARENT_SCOPE)
        endif()
    else()
    # NOTE: This check doesn't seem to work since we're setting the PLATFORM_NAME variable in PARENT_SCOPE.
    # if (NOT DEFINED PLATFORM_NAME)
        set(PLATFORM_NAME "Unknown" PARENT_SCOPE)
    endif()

    if (CMAKE_SYSTEM_PROCESSOR MATCHES "(x86_64)|((amd)|(AMD)64)")
        set(INTEL64 True PARENT_SCOPE)
    elseif (CMAKE_SYSTEM_PROCESSOR MATCHES "(arm)|(aarch)64")
        set(ARM64 True PARENT_SCOPE)
    endif()
endfunction()
